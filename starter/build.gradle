
plugins {
    id "com.jfrog.bintray" version "1.6"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'


compileJava {
    sourceCompatibility = 10
    targetCompatibility = 10

    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/elderbyte/maven" }
}


dependencies {
    compileOnly 'com.fasterxml.jackson.core:jackson-core:2.9.5'
    compileOnly 'com.fasterxml.jackson.core:jackson-annotations:2.9.5'
    compileOnly 'com.fasterxml.jackson.core:jackson-databind:2.9.5'

    testCompile("junit:junit:4.12")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

// Publishing / Bintray

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId 'com.elderbyte.starter'
            artifactId 'starter'

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']

    dryRun = false // Whether to run this as dry-run, without deploying
    publish = true // If version should be auto published after an upload

    pkg {
        repo = 'maven'
        name = "${jar.baseName}"
        userOrg = 'elderbyte'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ElderByte-/java-starter'

        version {
            name = project.version //Bintray logical version name
        }
    }
}

task upload {
    dependsOn bintrayUpload
}